if [ $SHLVL = 1 ]; then
	byobu
fi

# export
if type nvim >/dev/null 2>&1; then
	export EDITOR=nvim
	export VISUAL=nvim
fi
export TERM=screen-256color
export XDG_CACHE_HOME=~/.cache
export XDG_CONFIG_HOME=~/.config

# alias
alias beep='paplay /usr/share/sounds/ubuntu/stereo/system-ready.ogg'
alias rm=trash
alias rmdir=trash
alias sudo='sudo '

# bash history
bind '"\C-n": history-search-forward'
bind '"\C-p": history-search-backward'
function share_history {
	history -a
	history -c
	history -r
}
export PROMPT_COMMAND_HISTSAVE="share_history"
shopt -u histappend
HISTSIZE=20000

# bash
shopt -s autocd
shopt -s cdspell
shopt -s checkhash
shopt -s extglob
shopt -s globstar
shopt -s histreedit
shopt -s histverify
shopt -s hostcomplete
shopt -s no_empty_cmd_completion

# Git repository check
function check_git {
	if [ "$(git rev-parse --is-inside-work-tree 2> /dev/null)" = 'true' ]; then
		echo -e "\e[0;33m--- git status ---\e[0m"
		git status -sb
	fi
}

# cd -> cd + ls
function autols {
	if [ "${AUTOLS_DIR:-$PWD}" != "$PWD" ]; then
		ls -ACF
		check_git
	fi
	AUTOLS_DIR="${PWD}"
}
export PROMPT_COMMAND_AUTOLS="autols"

# Enter -> ls + git status
export HISTCONTROL=ignorespace
COUNT=$(wc -l < ~/.bash_history)
function lsgit {
	COUNT_TMP=$(wc -l < ~/.bash_history)
	if [ "$COUNT" != "$COUNT_TMP" ]; then
		COUNT="$COUNT_TMP"
		return 0
	fi
	
	ls -ACF
	check_git
}
export PROMPT_COMMAND_LSGIT="lsgit"

dispatch () {
	export EXIT_STATUS="$?"
	
	local f
	# shellcheck disable=SC2153
	for f in ${!PROMPT_COMMAND_*}; do
		eval "${!f}"
	done
	unset f
}
export PROMPT_COMMAND="dispatch"
